{"version":3,"file":"worker.js","sources":["../../../node_modules/.pnpm/file+packages+bene-web+rs-utils+pkg/node_modules/rs-utils/rs_utils.js","../worker.ts"],"sourcesContent":["let wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n*/\nexport function init_rs() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.init_rs(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        if (r1) {\n            throw takeObject(r0);\n        }\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Uint8Array} data\n* @returns {EpubCtxt}\n*/\nexport function load_epub(data) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.load_epub(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var r2 = getInt32Memory0()[retptr / 4 + 2];\n        if (r2) {\n            throw takeObject(r1);\n        }\n        return EpubCtxt.__wrap(r0);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\n/**\n*/\nexport class EpubCtxt {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(EpubCtxt.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_epubctxt_free(ptr);\n    }\n    /**\n    * @returns {string}\n    */\n    metadata() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.epubctxt_metadata(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @param {string} path\n    * @returns {Uint8Array}\n    */\n    read_file(path) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(path, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.epubctxt_read_file(retptr, this.__wbg_ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_error_new = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_buffer_a448f833075b71ba = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_d0482f893617af71 = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_8f67e318f15d7254 = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('rs_utils_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n","/// <reference lib=\"WebWorker\" />\nimport init, { EpubCtxt, init_rs, load_epub } from \"rs-utils\";\n\nlet globalSelf = self as any as ServiceWorkerGlobalScope;\nlet currentEpub: EpubCtxt | undefined;\n\nglobalSelf.addEventListener(\"install\", async _event => {\n  console.log(\"Installed on service side.\");\n  await globalSelf.skipWaiting();\n  await init();\n  init_rs();\n});\n\nlet installChannel = new BroadcastChannel(\"install-channel\");\nglobalSelf.addEventListener(\"activate\", async _event => {\n  console.log(\"Activated on service side.\");\n  await globalSelf.clients.claim();\n  installChannel.postMessage(\"installed\");\n});\n\nglobalSelf.addEventListener(\"fetch\", event => {\n  const EPUB_PREFIX = \"/bene-reader/epub-content/\";\n  let url = new URL(event.request.url);\n  if (currentEpub && url.pathname.startsWith(EPUB_PREFIX)) {    \n    let path = url.pathname.slice(EPUB_PREFIX.length);\n    let contents = currentEpub.read_file(path);\n    event.respondWith(new Response(contents));\n  }\n});\n\nglobalSelf.addEventListener(\"message\", async event => {\n  let message = event.data;\n  if (message.type == \"new-epub\") {\n    currentEpub = load_epub(message.data);\n    let metadata = JSON.parse(currentEpub.metadata());\n    let clients = await globalSelf.clients.matchAll();\n    for (let client of clients) {\n      client.postMessage({\n        type: \"loaded-epub\",\n        data: metadata,\n      });\n    }\n  }\n});\n"],"names":["ptr","init"],"mappings":"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","x_google_ignoreList":[0]}